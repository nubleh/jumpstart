{"version":3,"sources":["506px-Jumpstart_Booster.png","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","lands","idMap","arenaAlts","Controls","styled","div","Switch","active","css","Main","ChoiceName","Card","Booster","appear","keyframes","Choices","Deck","getImagePath","card","App","data","decklist","useState","chosenPacks","setChosenPacks","choices","setChoices","isArena","setIsArena","choosePack","i","deck","reduce","carry","next","nextDeck","cards","map","deckName","shortName","trim","onClick","drafted","length","Math","floor","random","candidate","indexOf","push","href","rel","target","k","frontCard","find","name","key","style","animationDelay","src","boosterImg","url","link","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.61c19904.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/506px-Jumpstart_Booster.a0c9a3d3.png\";","import React, { useState } from 'react';\n\nimport styled, { keyframes, css } from 'styled-components';\n\nimport decklist from './data/decklist.json';\nimport boosterImg from './506px-Jumpstart_Booster.png';\n\nconst imgPath = 'https://gatherer.wizards.com/Handlers/Image.ashx?type=card&name=';\nconst linkPath = 'https://gatherer.wizards.com/Pages/Search/Default.aspx?name=';\nconst imgPathById = 'https://gatherer.wizards.com/Handlers/Image.ashx?type=card&multiverseid=';\nconst linkPathById = 'https://gatherer.wizards.com/Pages/Card/Details.aspx?printed=true&multiverseid=';\nconst lands = [\n  'Island',\n  'Plains',\n  'Mountain',\n  'Swamp',\n  'Forest',\n];\nconst idMap: { [key: string]: number } = {\n  'Wizards Island': 489631,\n  'Well-Read Island': 489637,\n  'Under the Sea Island': 489630,\n  'Spirits Island': 489635,\n  'Pirates Island': 489636,\n  'Milling Island': 489634,\n  'Archaeology Island': 489633,\n  'Above the Clouds Island': 489632,\n  'Rainbow Terramorphic Expanse': 489662,\n  'Walls Forest': 489659,\n  'Tree-Hugging Forest': 489654,\n  'Predatory Forest': 489660,\n  'Plus One Forest': 489656,\n  'Lands Forest': 489655,\n  'Elves Forest': 489661,\n  'Dinosaurs Forest': 489657,\n  'Cats Forest': 489658,\n  'Spellcasting Mountain': 489650,\n  'Smashing Mountain': 489651,\n  'Seismic Mountain': 489648,\n  'Minotaurs Mountain': 489653,\n  'Lightning Mountain': 489652,\n  'Goblins Mountain': 489649,\n  'Dragons Mountain': 489646,\n  'Devilish Mountain': 489647,\n  'Unicorns Plains': 489625,\n  'Legion Plains': 489622,\n  'Heavily Armored Plains': 489627,\n  'Feathered Friends Plains': 489628,\n  'Enchanted Plains': 489626,\n  'Dogs Plains': 489629,\n  'Doctor Plains': 489623,\n  'Angels Plains': 489624,\n  'Witchcraft Swamp': 489643,\n  'Vampires Swamp': 489644,\n  'Spooky Swamp': 489645,\n  'Rogues Swamp': 489641,\n  'Reanimated Swamp': 489640,\n  'Phyrexian Swamp': 489642,\n  'Minions Swamp': 489638,\n  'Discarding Swamp': 489639,\n\n  // plain ones\n  'Swamp': 488467,\n  'Plains': 488461,\n  'Forest': 488473,\n  'Mountain': 488470,\n  'Island': 488464,\n};\n\nconst arenaAlts: { [key: string]: string } = {\n  'Chain Lightning': 'Lightning Strike',\n  'Lightning Bolt': 'Lightning Strike',\n  'Ball Lightning': 'Lightning Serpent',\n  'Ajani\\'s Chosen': 'Archon of Sun\\'s Grace',\n  'Angelic Arbiter': 'Serra\\'s Guardian',\n  'Draconic Roar': 'Scorching Dragonfire',\n  'Goblin Lore': 'Goblin Oriflamme',\n  'Flametongue Kavu': 'Fanatic of Mogis',\n  'Exhume': 'Bond of Revival',\n  'Fa\\'adiyah Seer': 'Dryad Greenseeker',\n  'Mausoleum Turnkey': 'Audacious Thief',\n  'Path to Exile': 'Banishing Light',\n  'Read the Runes': 'Gadwick, the Wizened',\n  'Reanimate': 'Doomed Necromancer',\n  'Rhystic Study': 'Teferi\\'s Ageless Insight',\n  'Sheoldred, Whispering One': 'Carnifex Demon',\n  'Scourge of Nel Toth': 'Woe Strider',\n  'Scrounging Bandar': 'Pollenbright Druid',\n  'Thought Scour': 'Weight of Memory',\n  'Time to Feed': 'Prey Upon'\n};\n\nfunction App() {\n  const { data } = decklist;\n\n  const [chosenPacks, setChosenPacks] = useState([] as number[]);\n  const [choices, setChoices] = useState([] as number[]);\n  const [isArena, setIsArena] = useState(false);\n\n  const draft3Packs = () => {\n    const drafted = [];\n    while(drafted.length < 3) {\n      const i = Math.floor(Math.random() * data.length);\n      const candidate = data[i];\n      const chosenNames = drafted.map(i => data[i]).map(deck => deck.shortName);\n      if (\n        chosenNames.indexOf(candidate.shortName) === -1\n        && chosenPacks.indexOf(i) === -1\n        && choices.indexOf(i) === -1\n      ) {\n        drafted.push(i);\n      }\n    }\n    setChoices(drafted);\n  };\n\n  const choosePack = (i: number) => {\n    return () => {\n      setChoices([]);\n      setChosenPacks([...chosenPacks, i]);\n    };\n  };\n\n  const resetPacks = () => {\n    setChoices([]);\n    setChosenPacks([]);\n  };\n\n  const deck = chosenPacks.reduce((carry, next) => {\n    const nextDeck = data[next];\n    if (!nextDeck) {\n      return carry;\n    }\n    return [\n      // ...nextDeck.cards.map(card => {\n      //   const matchingLand = lands.find(land => {\n      //     const variantName = `${nextDeck.shortName.toLowerCase()} ${land.toLowerCase()}`;\n      //     return variantName === card.toLowerCase();\n      //   });\n      //   if (matchingLand) {\n      //     return matchingLand;\n      //   }\n      //   return card;\n      // }),\n      ...nextDeck.cards.map(card => {\n        if (isArena && arenaAlts[card]) {\n          return arenaAlts[card];\n        }\n        return card;\n      }),\n      ...carry,\n    ];\n  }, [] as string[]);\n\n  const deckName = chosenPacks.reduce((carry, next) => {\n    const nextDeck = data[next];\n    if (!nextDeck) {\n      return carry;\n    }\n    if (carry === '') {\n      return nextDeck.shortName;\n    }\n    return carry.trim() + ' + ' + nextDeck.shortName;\n  }, '');\n\n  const switchMode = () => {\n    setIsArena(!isArena);\n  };\n\n  return (\n    <Main>\n      <Controls>\n        <Switch active={isArena ? 2 : 1} onClick={switchMode}>\n          <span>Paper</span>\n          <span>Arena</span>\n        </Switch>\n        <button onClick={draft3Packs}>Reveal 3 Packs</button>\n        <button onClick={resetPacks}>Reset</button>\n        <a\n          href='https://magic.wizards.com/en/articles/archive/feature/jumpstart-decklists-2020-06-18'\n          rel='noopener'\n          target='_blank'\n        >\n          decklist came from here\n        </a>\n        <a\n          href='https://magic.wizards.com/en/articles/archive/news/jumpstart-cards-being-replaced-mtg-arena-2020-06-17'\n          rel='noopener'\n          target='_blank'\n        >\n          arena replacements here\n        </a>\n        <a\n          href='https://github.com/nubleh/jumpstart'\n          rel='noopener'\n          target='_blank'\n        >\n          source available on github\n        </a>\n        {choices.length > 0 && <Choices>\n          {choices.map((i, k) => {\n            const deck = data[i];\n            const frontCard = deck.cards.find(name => lands.indexOf(name) !== -1);\n            return <div\n              key={deck.name}\n              onClick={choosePack(i)}\n              style={{\n                animationDelay: `${k * 0.3}s`,\n              }}\n            >\n              <ChoiceName>\n                {deck.shortName}\n              </ChoiceName>\n              <Booster>\n                <img src={boosterImg}/>\n              </Booster>\n              {frontCard && <Card><img src={getImagePath(frontCard)}/></Card>}\n            </div>;\n          })}\n        </Choices>}\n      </Controls>\n\n      {deck.length > 0 && <Deck>\n        <div>\n          {deckName} ({deck.length} cards)\n        </div>\n        {deck.map((card, i) => {\n          const url = card.indexOf('http') === -1 ? getImagePath(card) : card;\n          const link = idMap[card] ? `${linkPathById}${idMap[card]}` : `${linkPath}${card}`;\n          return <a\n            href={link}\n            rel=\"noopener\"\n            target=\"_blank\"\n            key={`${card}-${i}`}\n          >\n            <Card>\n              <img src={url}/>\n            </Card>\n          </a>;\n        })}\n      </Deck>}\n    </Main>\n  );\n}\n\nconst Controls = styled.div`\n  position: fixed;\n  top: 0;\n  padding: 20px 0;\n  z-index: 10;\n  background: rgba(0, 0, 0, 0.3);\n  left: 0;\n  width: 100%;\n`;\n\ninterface SwitchProps {\n  active: number;\n}\nconst Switch = styled.div<SwitchProps>`\n  display: inline-block;\n  height: 30px;\n  line-height: 30px;\n  cursor: pointer;\n  margin: 0 16px;\n  user-select: none;\n\n  > span {\n    padding: 0 16px;\n    display: inline-block;\n    border-radius: 30px;\n    transition: background 0.2s;\n\n    &:hover {\n      opacity: 0.9;\n    }\n  }\n\n  ${({ active }) => css`\n    > span:nth-child(${active}) {\n      background: rgba(0, 0, 0, 0.6);\n    }\n  `}\n`;\n\nconst Main = styled.div`\n  padding: 20px 40px;\n\n  button {\n    cursor: pointer;\n  }\n\n  a {\n    color: #fff;\n    margin-left: 20px;\n    font-size: 12px;\n  }\n`;\n\nconst ChoiceName = styled.div`\n  background: rgba(0, 0, 0, 0.6);\n  display: inline-block;\n  padding: 4px 16px;\n  font-size: 12px;\n  border-radius: 100px;\n  position: absolute;\n  bottom: 22px;\n  left: 50%;\n  transform: translateX(-50%);\n  white-space: nowrap;\n  z-index: 2;\n`;\n\nconst Card = styled.div`\n  border-radius: 14px;\n  overflow: hidden;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n  position: relative;\n  width: 233px;\n  height: 310px;\n  transition: transform 0.1s;\n\n  > img {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Booster = styled.div`\n  > img {\n    width: 200px;\n  }\n`;\n\nconst appear = keyframes`\n  0% {\n    transform: translateY(50px);\n    opacity: 0;\n  }\n  100% {\n    transform: none;\n    opacity: 1;\n  }\n`;\nconst Choices = styled.div`\n  padding-top: 40px;\n\n  ${Booster} {\n    position: relative;\n    z-index: 1;\n  }\n  ${Card} {\n    position: absolute;\n    z-index: 0;\n    top: -10px;\n    transform: translateX(-50%) scale(0.7);\n    left: 50%;\n    transform-origin: center top;\n  }\n\n  > div {\n    display: inline-block;\n    margin: 8px;\n    position: relative;\n    cursor: pointer;\n    transition: opacity 0.1s;\n    animation: ${appear} 1s 1;\n    animation-fill-mode: forwards;\n    transform: translateY(50px);\n    opacity: 0;\n\n    &:hover {\n      ${Card} {\n        transform: translateX(-50%) scale(0.7) translateY(-50px);\n      }\n    }\n  }\n`;\n\nconst Deck = styled.div`\n  margin: 80px 0;\n  ${Card} {\n    display: inline-block;\n\n    &:hover {\n      transform: scale(1.5);\n      z-index: 2;\n    }\n  }\n`;\n\nfunction getImagePath(card: string) {\n  if (idMap[card]) {\n    return `${imgPathById}${idMap[card]}`;\n  }\n  return `${imgPath}${card}`;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}